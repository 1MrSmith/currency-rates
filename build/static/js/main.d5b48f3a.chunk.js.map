{"version":3,"sources":["serviceWorker.ts","styles/list.style.ts","components/list/ListItemField.tsx","components/list/ListTo.tsx","styles/home.style.ts","styles/converter.style.ts","components/InputField.tsx","components/Converter.tsx","routes/Home.tsx","engine/Data.ts","styles/currency.style.ts","routes/Currency.tsx","styles/about.style.ts","routes/About.tsx","styles/route.styles.ts","components/NavBar.tsx","index.tsx","App.tsx"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","createStyles","list","listStyleType","marginBottom","marginTop","list__item_caption","fontWeight","fontSize","list__item","height","borderTop","borderBottom","list__item_verticalAlign","lineHeight","list__item_cell","display","padding","width","textAlign","ListItemField","memo","props","classes","curAbbr","react_default","a","createElement","className","clsx","react_router_dom","to","concat","curId","curScale","curName","curOfficialRate","ListTo","items","map","item","key","Cur_ID","Cur_Abbreviation","Cur_Scale","Cur_Name","Cur_OfficialRate","body","margin","title","search__input","search","footer","position","left","bottom","backgroundColor","flexDirection","flexWrap","justifyContent","footer__cell","footer__label","color","marginRight","footer__input","InputField","_useState","useState","_useState2","Object","slicedToArray","convert","SetConvert","changeInput","useCallback","e","strNum","target","name","label","type","pattern","onChange","Converter","currency","i","value","Home","arr","dataState","setDataState","_useState3","_useState4","dataTempState","setDataTempState","_useState5","_useState6","currencies","setCurrencies","useEffect","axios","get","then","res","arr2","data","filter","cur","push","unshift","catch","error","TypeError","str","toLowerCase","toLocaleLowerCase","TextField","placeholder","InputProps","endAdornment","InputAdornment","Icon","canvasContainer","Currency","dates","setDateChart","dataChart","setLabels","id","date","Date","getFullYear","getMonth","getDay","join","loadDataByID","params","arrDate","arrLabels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","toString","split","slice","err","return","labels","datasets","abbr","fill","borderColor","es","describe","About","activeLink","menu","marginLeft","menu__item","NavBar","react","exact","activeClassName","ReactDOM","render","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5b48f3a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href,\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n// tslint:disable-next-line: no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n// tslint:disable-next-line: no-console\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n// tslint:disable-next-line: no-console\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n// tslint:disable-next-line: no-console\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n// tslint:disable-next-line: no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        list: {\r\n            listStyleType: 'none',\r\n            marginBottom: '9vh',\r\n            marginTop: '2vh',\r\n        },\r\n        list__item_caption: {\r\n            fontWeight: 'bold',\r\n            fontSize: '2vh',\r\n        },\r\n        list__item: {\r\n            fontSize: '1.8vh',\r\n            height: '7.5vh',\r\n            borderTop: '0.1vh solid black',\r\n            borderBottom: '0.1vh solid black',\r\n        },\r\n        list__item_verticalAlign: {\r\n            lineHeight: '7.5vh',\r\n            borderTop: '0.1vh solid black',\r\n            borderBottom: '0.1vh solid black',\r\n        },\r\n        list__item_cell: {\r\n            display: 'inline-block',\r\n            padding: '0.5vh',\r\n            width: '18vh',\r\n            textAlign: 'center',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../styles/list.style';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  curId: number;\r\n  curAbbr: string;\r\n  curScale: number;\r\n  curName: string;\r\n  curOfficialRate: number;\r\n}\r\n\r\nexport const ListItemField: React.FC<Props> = memo((props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  if (props.curAbbr !== 'AUD' && props.curAbbr !== 'NZD') {\r\n    return (\r\n      <li\r\n        className={clsx(classes.list__item, classes.list__item_verticalAlign)}\r\n      >\r\n        <span className={classes.list__item_cell}>\r\n          {' '}\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {props.curId}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {props.curAbbr}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curScale}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curName}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curOfficialRate}{' '}\r\n          </Link>\r\n        </span>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className={classes.list__item}>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curId}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          {' '}\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {props.curAbbr}\r\n          </Link>{' '}\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curScale}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curName}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curOfficialRate}{' '}\r\n          </Link>\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n});\r\n","import React, { memo } from 'react';\r\nimport { Rate } from '../../model/Rate';\r\nimport { ListItemField } from './ListItemField';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../styles/list.style';\r\n\r\ninterface Props {\r\n  items: Rate[];\r\n}\r\n\r\nexport const ListTo: React.FC<Props> = memo((props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.list}>\r\n      <div\r\n        className={clsx(\r\n          classes.list__item_verticalAlign,\r\n          classes.list__item_caption,\r\n        )}\r\n      >\r\n        <span className={classes.list__item_cell}>ID</span>\r\n        <span className={classes.list__item_cell}>Abbreviation</span>\r\n        <span className={classes.list__item_cell}>Scale</span>\r\n        <span className={classes.list__item_cell}>Name</span>\r\n        <span className={classes.list__item_cell}>Official rate</span>\r\n      </div>\r\n      {props.items.map((item: Rate) => (\r\n        <ListItemField\r\n          key={item.Cur_ID}\r\n          curId={item.Cur_ID}\r\n          curAbbr={item.Cur_Abbreviation}\r\n          curScale={item.Cur_Scale}\r\n          curName={item.Cur_Name}\r\n          curOfficialRate={item.Cur_OfficialRate}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            margin: '0 auto',\r\n            width: '105vh',\r\n        },\r\n        title: {\r\n            fontSize: '3vh',\r\n            fontWeight: 'bold',\r\n        },\r\n        search__input: {\r\n            width: '43vh',\r\n        },\r\n        search: {\r\n            height: '5vh',\r\n            textAlign: 'center',\r\n        },\r\n    }),\r\n);\r\n","import { makeStyles, createStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(() =>\r\n    createStyles({\r\n        footer: {\r\n            position: 'fixed',\r\n            left: '0',\r\n            bottom: '0',\r\n            width: '100%',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n        },\r\n        footer__cell: {\r\n            padding: '1.5vh',\r\n            width: '25vh',\r\n            fontSize: '1.8vh',\r\n            lineHeight: '5vh',\r\n        },\r\n        footer__label: {\r\n            color: 'white',\r\n            marginRight: '0.5vh',\r\n        },\r\n        footer__input: {\r\n            width: '20vh',\r\n            height: '2vh',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { useStyles } from '../styles/converter.style';\r\n\r\ninterface Props {\r\n    label: string;\r\n    value: number;\r\n}\r\n\r\nexport const InputField: React.FC<Props> = memo((props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [convert, SetConvert] = useState('');\r\n\r\n  const changeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const strNum: string = e.target.name;\r\n      // const num: number = +strNum;\r\n      // tslint:disable-next-line: no-console\r\n      // console.log(num);\r\n      SetConvert(strNum);\r\n    },\r\n    [SetConvert, convert],\r\n  );\r\n\r\n  return (\r\n    <div className={classes.footer__cell}>\r\n      <label className={classes.footer__label}>{props.label}</label>\r\n      <input className={classes.footer__input} name={props.label} type=\"number\" pattern=\"\\d+(\\.\\d{2})?\"  onChange={changeInput}/>\r\n    </div>\r\n  );\r\n});\r\n","import React, { memo } from 'react';\r\nimport { useStyles } from '../styles/converter.style';\r\nimport { ConvertCurrency } from '../model/ConvertCurrency';\r\nimport { InputField } from './InputField';\r\n\r\ninterface Props {\r\n  currency: ConvertCurrency[];\r\n}\r\n\r\nexport const Converter: React.FC<Props> = memo((props: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.footer}>\r\n      {props.currency.map((item: ConvertCurrency, i: number) => (\r\n            <InputField\r\n              key={i}\r\n              label={item.label}\r\n              value={item.value}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n});\r\n","import React, { memo, useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { loadData, searchByAbbr } from '../engine/Data';\r\nimport { Rate } from '../model/Rate';\r\nimport { ListTo } from '../components/list/ListTo';\r\nimport { useStyles } from '../styles/home.style';\r\nimport { TextField, InputAdornment, Icon } from '@material-ui/core';\r\nimport { Converter } from '../components/Converter';\r\nimport { ConvertCurrency } from '../model/ConvertCurrency';\r\n\r\nexport const Home: React.FC = memo(() => {\r\n  const classes = useStyles();\r\n\r\n  const arr: Rate[] = [];\r\n  const currency: ConvertCurrency[] = [];\r\n\r\n  const [dataState, setDataState] = useState(arr);\r\n  const [dataTempState, setDataTempState] = useState(arr);\r\n\r\n  const [currencies, setCurrencies] = useState(currency);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(loadData())\r\n      .then(res => {\r\n        const arr2: Rate[] = res.data.filter(\r\n          (item: Rate) => item.Cur_Abbreviation !== 'XDR',\r\n        ) as Rate[];\r\n\r\n        const cur: ConvertCurrency[] = [];\r\n\r\n        arr2.map((item: Rate) => {\r\n          if (item.Cur_Abbreviation === 'USD') {\r\n            cur.push({\r\n              label: item.Cur_Abbreviation,\r\n              value: item.Cur_OfficialRate,\r\n            });\r\n          }\r\n          if (item.Cur_Abbreviation === 'EUR') {\r\n            cur.push({\r\n              label: item.Cur_Abbreviation,\r\n              value: item.Cur_OfficialRate,\r\n            });\r\n          }\r\n          if (item.Cur_Abbreviation === 'RUB') {\r\n            cur.push({\r\n              label: item.Cur_Abbreviation,\r\n              value: item.Cur_OfficialRate,\r\n            });\r\n          }\r\n          if (item.Cur_Abbreviation === 'PLN') {\r\n            cur.push({\r\n              label: item.Cur_Abbreviation,\r\n              value: item.Cur_OfficialRate,\r\n            });\r\n          }\r\n        });\r\n\r\n        cur.unshift({\r\n          label: 'BYN',\r\n          value: 1,\r\n        });\r\n        setCurrencies(cur);\r\n        setDataState(arr2);\r\n        setDataTempState(arr2);\r\n      })\r\n      .catch(error => {\r\n        throw new TypeError(error);\r\n      });\r\n  }, []);\r\n\r\n  const changeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setDataState(searchByAbbr(e.target.value, dataTempState));\r\n    },\r\n    [setDataTempState, dataTempState],\r\n  );\r\n\r\n  return (\r\n    <div className={classes.body}>\r\n      <div className={classes.title}>Home page!</div>\r\n      <div className={classes.search}>\r\n        <TextField\r\n          label=\"Search\"\r\n          placeholder=\"Search necessary currency\"\r\n          className={classes.search__input}\r\n          onChange={changeInput}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Icon>search</Icon>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <ListTo items={dataState} />\r\n      </div>\r\n\r\n      <Converter currency={currencies} />\r\n    </div>\r\n  );\r\n});\r\n","import { Rate } from '../model/Rate';\r\nimport { ConvertCurrency } from '../model/ConvertCurrency';\r\n\r\nexport function loadDataByID(id: number): string {\r\n    const date: Date = new Date();\r\n    return 'https://www.nbrb.by/API/ExRates/Rates/Dynamics/' + id + '?startDate=' + [date.getFullYear(), date.getMonth(), date.getDay()].join('-') + '&endDate=' + [date.getFullYear(), date.getMonth() + 1, date.getDay()].join('-');\r\n}\r\n\r\nexport function loadData(): string {\r\n    return 'https://www.nbrb.by/API/ExRates/Rates?Periodicity=0';\r\n}\r\n\r\nexport function searchByAbbr(str: string, tempRateList: Rate[]): Rate[] {\r\n    return tempRateList.filter((item: Rate) => item.Cur_Abbreviation.toLowerCase().match(str.toLocaleLowerCase()));\r\n}\r\n\r\n// export function convertCurrency(byn: number, usd: number, eur: number, rub: number, pln: number): ConvertCurrency {\r\n\r\n//     return {\r\n//         BYN: byn,\r\n//         USD: usd,\r\n//         EUR: eur,\r\n//         RUB: rub,\r\n//         PLN: pln,\r\n//     };\r\n// }\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            margin: '0 auto',\r\n            width: '105vh',\r\n        },\r\n        title: {\r\n            fontSize: '3vh',\r\n            fontWeight: 'bold',\r\n        },\r\n        canvasContainer: {\r\n            height: '60vh',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useStyles } from '../styles/currency.style';\r\nimport { loadDataByID } from '../engine/Data';\r\nimport { RateShort } from '../model/RateShort';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport const Currency: React.FC<RouteComponentProps<any>> = memo(\r\n  (props: RouteComponentProps<any>) => {\r\n    const classes = useStyles();\r\n\r\n    const arrX: string[] = [];\r\n    const arrY: number[] = [];\r\n\r\n    const [dates, setDateChart] = useState(arrX);\r\n    const [dataChart, setLabels] = useState(arrY);\r\n\r\n    useEffect(() => {\r\n      axios\r\n        .get(loadDataByID(props.match.params.id))\r\n        .then(res => {\r\n          const arrDate: string[] = [];\r\n          const arrLabels: number[] = [];\r\n          for (const item of res.data as RateShort[]) {\r\n            const str: string[] = item.Date.toString()\r\n              .split('T')\r\n              .slice(0, 1);\r\n            arrDate.push(str[0]);\r\n            arrLabels.push(item.Cur_OfficialRate);\r\n          }\r\n          setLabels(arrLabels);\r\n          setDateChart(arrDate);\r\n        })\r\n        .catch(error => {\r\n          throw new TypeError(error);\r\n        });\r\n    }, []);\r\n\r\n    const data = {\r\n      labels: dates,\r\n      datasets: [\r\n        {\r\n          label: props.match.params.abbr,\r\n          data: dataChart,\r\n          fill: false,\r\n          borderColor: '#00AEFF',\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div className={classes.body}>\r\n        <div className={classes.title}>\r\n          Chart | ID: {props.match.params.id}\r\n        </div>\r\n        <article className={classes.canvasContainer}>\r\n          <Line data={data} />\r\n        </article>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            margin: '0 auto',\r\n            width: '105vh',\r\n        },\r\n        describe: {\r\n            textAlign: 'center',\r\n            fontSize: '2.5vh',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo } from 'react';\r\nimport { useStyles } from '../styles/about.style';\r\n\r\nexport const About: React.FC = memo(() => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.body}>\r\n      <h3>About page!</h3>\r\n      <div className={classes.describe}>\r\n        It's the test project for understanding react\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        activeLink: {\r\n            color: 'red',\r\n        },\r\n        menu: {\r\n            marginLeft: '5vh',\r\n            marginTop: '2vh',\r\n            fontSize: '2.5vh',\r\n        },\r\n        menu__item: {\r\n            marginBottom: '1vh',\r\n        },\r\n    }),\r\n);\r\n","import * as React from 'react';\r\nimport { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useStyles } from '../styles/route.styles';\r\n\r\nexport const NavBar: React.FC = memo(() => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <nav className={classes.menu}>\r\n        <div className={classes.menu__item}>\r\n        <NavLink exact={true} activeClassName={classes.activeLink} to=\"/\">\r\n          Home\r\n        </NavLink>\r\n        </div>\r\n        <div className={classes.menu__item}>\r\n        <NavLink exact={true} activeClassName={classes.activeLink} to=\"/about\">\r\n          About\r\n        </NavLink>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, Redirect, Switch } from 'react-router';\r\nimport { Home } from './routes/Home';\r\nimport { Currency } from './routes/Currency';\r\nimport { About } from './routes/About';\r\nimport { NavBar } from './components/NavBar';\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n        <Route exact={true} path=\"/about\" component={About} />\r\n        <Route exact={true} path=\"/currency/:id/:abbr\" component={Currency} />\r\n        <Redirect to={'/'} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}