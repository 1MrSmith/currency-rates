{"version":3,"sources":["serviceWorker.ts","Styles/list.style.ts","Components/List/ListItemField.tsx","Components/List/ListTo.tsx","Styles/home.style.ts","Components/Home.tsx","Engine/Data.ts","Styles/about.style.ts","Components/About.tsx","Styles/route.styles.ts","Styles/currency.style.ts","Components/Currency.tsx","Components/Routes.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","createStyles","list","listStyleType","list__item_caption","fontWeight","list__item","fontSize","height","borderTop","borderBottom","list__item_verticalAlign","lineHeight","list__item_cell","display","padding","width","textAlign","ListItemField","memo","props","classes","curAbbr","react_default","a","createElement","className","clsx","react_router_dom","to","concat","curId","curScale","curName","curOfficialRate","ListTo","items","map","item","key","Cur_ID","Cur_Abbreviation","Cur_Scale","Cur_Name","Cur_OfficialRate","body","margin","search__input","search","Home","arr","_useState","useState","_useState2","Object","slicedToArray","dataState","setDataState","_useState3","_useState4","dataTempState","setDataTempState","useEffect","axios","get","then","res","arr2","data","filter","catch","error","TypeError","changeInput","useCallback","e","str","target","value","toLowerCase","toLocaleLowerCase","TextField","label","placeholder","onChange","InputProps","endAdornment","InputAdornment","position","Icon","describe","About","activeLink","color","canvasContainer","Currency","dates","setDateChart","dataChart","setLabels","id","date","Date","getFullYear","getMonth","getDay","join","loadDataByID","params","arrDate","arrLabels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","toString","split","slice","push","err","return","labels","datasets","abbr","fill","borderColor","es","Routes","react","exact","activeClassName","react_router","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.632d11de.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href,\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n// tslint:disable-next-line: no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n// tslint:disable-next-line: no-console\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n// tslint:disable-next-line: no-console\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n// tslint:disable-next-line: no-console\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n// tslint:disable-next-line: no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\n// tslint:disable-next-line: typedef\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        list: {\r\n            listStyleType: 'none',\r\n        },\r\n        list__item_caption: {\r\n            fontWeight: 'bold',\r\n        },\r\n        list__item: {\r\n            fontSize: '18px',\r\n            height: '75px',\r\n            borderTop: '1px solid black',\r\n            borderBottom: '1px solid black',\r\n        },\r\n        list__item_verticalAlign: {\r\n            lineHeight: '75px',\r\n            borderTop: '1px solid black',\r\n            borderBottom: '1px solid black',\r\n        },\r\n        list__item_cell: {\r\n            display: 'inline-block',\r\n            padding: '5px',\r\n            width: '180px',\r\n            textAlign: 'center',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../Styles/list.style';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  curId: number;\r\n  curAbbr: string;\r\n  curScale: number;\r\n  curName: string;\r\n  curOfficialRate: number;\r\n}\r\n\r\nexport const ListItemField: React.FC<Props> = memo((props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  if (props.curAbbr !== 'AUD' && props.curAbbr !== 'NZD') {\r\n    return (\r\n      <li\r\n        className={clsx(classes.list__item, classes.list__item_verticalAlign)}\r\n      >\r\n        <span className={classes.list__item_cell}>\r\n          {' '}\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {props.curId}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {props.curAbbr}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curScale}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curName}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curOfficialRate}{' '}\r\n          </Link>\r\n        </span>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className={classes.list__item}>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curId}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          {' '}\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {props.curAbbr}\r\n          </Link>{' '}\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curScale}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curName}{' '}\r\n          </Link>\r\n        </span>\r\n        <span className={classes.list__item_cell}>\r\n          <Link to={`/currency/${props.curId}/${props.curAbbr}`}>\r\n            {' '}\r\n            {props.curOfficialRate}{' '}\r\n          </Link>\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n});\r\n","import React, { memo } from 'react';\r\nimport { Rate } from '../../Model/Rate';\r\nimport { ListItemField } from './ListItemField';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../Styles/list.style';\r\n\r\ninterface Props {\r\n  items: Rate[];\r\n}\r\n\r\nexport const ListTo: React.FC<Props> = memo((props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <ul className={classes.list}>\r\n        <li className={clsx(classes.list__item_verticalAlign, classes.list__item_caption)}>\r\n          <span className={classes.list__item_cell}>ID</span>\r\n          <span className={classes.list__item_cell}>Abbreviation</span>\r\n          <span className={classes.list__item_cell}>Scale</span>\r\n          <span className={classes.list__item_cell}>Name</span>\r\n          <span className={classes.list__item_cell}>Official rate</span>\r\n        </li>\r\n        {props.items.map((item: Rate) => (\r\n          <ListItemField\r\n            key={item.Cur_ID}\r\n            curId={item.Cur_ID}\r\n            curAbbr={item.Cur_Abbreviation}\r\n            curScale={item.Cur_Scale}\r\n            curName={item.Cur_Name}\r\n            curOfficialRate={item.Cur_OfficialRate}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            margin: '0 auto',\r\n            width: '1000px',\r\n        },\r\n        search__input: {\r\n            width: '400px',\r\n        },\r\n        search: {\r\n            textAlign: 'center',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo, useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { loadData, searchByAbbr } from '../Engine/Data';\r\nimport { Rate } from '../Model/Rate';\r\nimport { ListTo } from './List/ListTo';\r\nimport { useStyles } from '../Styles/home.style';\r\nimport { TextField, InputAdornment, Icon } from '@material-ui/core';\r\n\r\nexport const Home: React.FC = memo(() => {\r\n  const classes = useStyles();\r\n\r\n  const arr: Rate[] = [];\r\n\r\n  const [dataState, setDataState] = useState(arr);\r\n  const [dataTempState, setDataTempState] = useState(arr);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(loadData())\r\n      .then(res => {\r\n        const arr2: Rate[] = res.data.filter(\r\n          (item: Rate) => item.Cur_Abbreviation !== 'XDR',\r\n        ) as Rate[];\r\n        setDataState(arr2);\r\n        setDataTempState(arr2);\r\n      })\r\n      .catch(error => {\r\n        throw new TypeError(error);\r\n      });\r\n  }, []);\r\n\r\n  const changeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setDataState(searchByAbbr(e.target.value, dataTempState));\r\n    },\r\n    [setDataTempState, dataTempState],\r\n  );\r\n\r\n  return (\r\n    <div className={classes.body}>\r\n      <h3>Home page!</h3>\r\n      <div className={classes.search}>\r\n        <TextField\r\n          label=\"Search\"\r\n          placeholder=\"Search necessary currency\"\r\n          className={classes.search__input}\r\n          onChange={changeInput}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Icon>search</Icon>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <ListTo items={dataState} />\r\n    </div>\r\n  );\r\n});\r\n","import { Rate } from '../Model/Rate';\r\n\r\nexport function loadDataByID(id: number): string {\r\n    const date: Date = new Date();\r\n    return 'https://www.nbrb.by/API/ExRates/Rates/Dynamics/' + id + '?startDate=' + [date.getFullYear(), date.getMonth(), date.getDay()].join('-') + '&endDate=' + [date.getFullYear(), date.getMonth() + 1, date.getDay()].join('-');\r\n}\r\n\r\nexport function loadData(): string {\r\n    return 'https://www.nbrb.by/API/ExRates/Rates?Periodicity=0';\r\n}\r\n\r\nexport function searchByAbbr(str: string, tempRateList: Rate[]): Rate[] {\r\n    return tempRateList.filter((item: Rate) => item.Cur_Abbreviation.toLowerCase().match(str.toLocaleLowerCase()));\r\n}\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            margin: '0 auto',\r\n            width: '1000px',\r\n        },\r\n        describe: {\r\n            textAlign: 'center',\r\n            fontSize: '20px',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo } from 'react';\r\nimport { useStyles } from '../Styles/about.style';\r\n\r\nexport const About: React.FC = memo(() => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.body}>\r\n      <h3>About page!</h3>\r\n      <div className={classes.describe}>\r\n        It's the test project for understanding react\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        activeLink: {\r\n            color: 'red',\r\n        },\r\n    }),\r\n);\r\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        body: {\r\n            margin: '0 auto',\r\n            width: '1000px',\r\n        },\r\n        canvasContainer: {\r\n            height: '60vh',\r\n        },\r\n    }),\r\n);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useStyles } from '../Styles/currency.style';\r\nimport { loadDataByID } from '../Engine/Data';\r\nimport { RateShort } from '../Model/RateShort';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport const Currency: React.FC<RouteComponentProps<any>> = memo(\r\n  (props: RouteComponentProps<any>) => {\r\n    const classes = useStyles();\r\n\r\n    const arrX: string[] = [];\r\n    const arrY: number[] = [];\r\n\r\n    const [dates, setDateChart] = useState(arrX);\r\n    const [dataChart, setLabels] = useState(arrY);\r\n\r\n    useEffect(() => {\r\n      axios\r\n        .get(loadDataByID(props.match.params.id))\r\n        .then(res => {\r\n          const arrDate: string[] = [];\r\n          const arrLabels: number[] = [];\r\n          for (const item of res.data as RateShort[]) {\r\n            const str: string[] = item.Date.toString()\r\n              .split('T')\r\n              .slice(0, 1);\r\n            arrDate.push(str[0]);\r\n            arrLabels.push(item.Cur_OfficialRate);\r\n          }\r\n          setLabels(arrLabels);\r\n          setDateChart(arrDate);\r\n        })\r\n        .catch(error => {\r\n          throw new TypeError(error);\r\n        });\r\n    }, []);\r\n\r\n    const data = {\r\n      labels: dates,\r\n      datasets: [\r\n        {\r\n          label: props.match.params.abbr,\r\n          data: dataChart,\r\n          fill: false,\r\n          borderColor: '#00AEFF',\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div className={classes.body}>\r\n        <h3>Chart | ID: {props.match.params.id}</h3>\r\n        <article className={classes.canvasContainer}>\r\n          <Line data={data} />\r\n        </article>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n","import * as React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport { Home } from './Home';\r\nimport { About } from './About';\r\nimport { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useStyles } from '../Styles/route.styles';\r\nimport { Currency } from './Currency';\r\n\r\nexport const Routes: React.FC = memo(() => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink exact={true} activeClassName={classes.activeLink} to=\"/\">Home</NavLink>\r\n          </li>\r\n          <li>\r\n          <NavLink exact={true} activeClassName={classes.activeLink} to=\"/about\">About</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <Switch>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n        <Route exact={true} path=\"/about\" component={About} />\r\n        <Route exact={true} path=\"/currency/:id/:abbr\" component={Currency} />\r\n        <Redirect to={'/'} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {Routes} from './Components/Routes';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Routes/>\r\n    </Router>\r\n, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}